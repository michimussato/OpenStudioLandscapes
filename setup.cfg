# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

# pypa Sample Project:
# https://github.com/pypa/sampleproject/blob/main/pyproject.toml

# https://labex.io/tutorials/python-how-to-include-additional-files-in-a-python-package-398030

[metadata]
name = OpenStudioLandscapes
description = A Toolkit to create dynamic Animation and VFX studio environments and pipelines.
author = Michael Mussato
author_email = michimussato@gmail.com
license = AGPL-3.0
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/michimussato/OpenStudioLandscapes

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = Linux

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.11

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    PyYAML
    pydot
    gitpython
    dagster==1.9.11
    dagster-postgres
    docker
    nox
    pyscaffold
    docker-compose-graph @ git+https://github.com/michimussato/docker-compose-graph.git@v1.0.0


[options.packages.find]
where = src
exclude =
    tests

# [options.package_data]
# # * = *.txt, *.rst
# hello = *.msg

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install OpenStudioLandscapes[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

graphviz =
    graphviz
    pipdeptree

sbom =
    OpenStudioLandscapes[graphviz]
    cyclonedx-bom

lint =
    black
    isort
    pre-commit
    pylint

coverage =
    coverage
    pytest

nox =
    OpenStudioLandscapes[testing]
    nox

readme =
    OpenStudioLandscapesUtil-ReadmeGenerator @ git+https://github.com/michimussato/OpenStudioLandscapesUtil-ReadmeGenerator.git@v1.0.0

dagster_mysql =
    OpenStudioLandscapes[nox]
    dagster==1.9.11
    dagster-webserver==1.9.11

dagster_postgres =
    OpenStudioLandscapes[nox]
    dagster==1.9.11
    dagster-postgres
    dagster-webserver==1.9.11

dev =
    OpenStudioLandscapes[testing]
    OpenStudioLandscapes[lint]
    OpenStudioLandscapes[nox]
    OpenStudioLandscapes[sbom]
    OpenStudioLandscapes[coverage]
    OpenStudioLandscapes[readme]
    snakemd
    dagster-webserver==1.9.11


[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = OpenStudioLandscapes.engine.module:function
# For example:
# console_scripts =
#     fibonacci = OpenStudioLandscapes.engine.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

# [tool:pytest]
# # Specify command line options as you would do when invoking pytest directly.
# # e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# # in order to write a coverage file that can be read by Jenkins.
# # CAUTION: --cov flags may prohibit setting breakpoints while debugging.
# #          Comment those flags to avoid this pytest issue.
# addopts =
#     --cov OpenStudioLandscapes.engine --cov-report term-missing
#     --verbose
# norecursedirs =
#     dist
#     build
#     .nox
# testpaths = tests
# # Use pytest markers to select/deselect specific tests
# # markers =
# #     slow: mark tests as slow (deselect with '-m "not slow"')
# #     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

# [flake8]
# # Some sane defaults for the code style checker flake8
# max_line_length = 88
# extend_ignore = E203, W503
# # ^  Black-compatible
# #    E203 and W503 have edge cases handled by black
# exclude =
#     .nox
#     .svg
#     build
#     dist
#     .eggs
#     docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.6
package = OpenStudioLandscapes
extensions =
    namespace
namespace = OpenStudioLandscapes
